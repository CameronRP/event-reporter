project_name: event-reporter
dist: dist

version: 2

release:
  github:
    owner: TheCacophonyProject
    name: event-reporter
  name_template: '{{.Tag}}'

builds:
- id: event-reporter
  binary: event-reporter
  main: ./cmd/event-reporter
  goos:
    - linux
  goarch:
    - arm
    - arm64
  goarm:
    - "7"
  ldflags: -s -w -X main.version={{.Version}}

- id: service-watcher
  binary: service-watcher
  main: ./cmd/service-watcher
  goos:
    - linux
  goarch:
    - arm
    - arm64
  goarm:
    - "7"
  ldflags: -s -w -X main.version={{.Version}}

- id: version-reporter
  binary: version-reporter
  main: ./cmd/version-reporter
  goos:
    - linux
  goarch:
    - arm
    - arm64
  goarm:
    - "7"
  ldflags: -s -w -X main.version={{.Version}}

nfpms:
- vendor: The Cacophony Project
  homepage: http://cacophony.org.nz/
  maintainer: Cacophony Developers <coredev@cacophony.org.nz>
  description: Queue and report events to the Cacophony Project API
  license: GPL v3.0
  file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Arch }}"
  formats:
    - deb
  bindir: /usr/bin
  contents:
    - src: _release/event-reporter.service
      dst: /etc/systemd/system/event-reporter.service
    - src: _release/service-watcher.service
      dst: /etc/systemd/system/service-watcher.service
    - src: _release/version-reporter.service
      dst: /etc/systemd/system/version-reporter.service
    - src: _release/rpi-power-on.service
      dst: /etc/systemd/system/rpi-power-on.service
    - src: _release/rpi-power-off.service
      dst: /etc/systemd/system/rpi-power-off.service
    - src: _release/report-event
      dst: /usr/bin/report-event
    - src: _release/save-powered-off-time
      dst: /usr/bin/save-powered-off-time
    - src: _release/org.cacophony.Events.conf
      dst: /etc/dbus-1/system.d/org.cacophony.Events.conf
  scripts:
    postinstall: "_release/postinstall.sh"

checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
